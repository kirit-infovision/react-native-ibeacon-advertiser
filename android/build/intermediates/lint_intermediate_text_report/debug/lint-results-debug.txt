/Users/kirit.vaghela/react-native-ibeacon-simulator/android/build.gradle:7: Warning: JCenter Maven repository is no longer receiving updates: newer library versions may be available elsewhere [JcenterRepositoryObsolete]
        jcenter()
        ~~~~~~~~~
/Users/kirit.vaghela/react-native-ibeacon-simulator/android/build.gradle:18: Warning: JCenter Maven repository is no longer receiving updates: newer library versions may be available elsewhere [JcenterRepositoryObsolete]
    jcenter()
    ~~~~~~~~~

   Explanation for issues of type "JcenterRepositoryObsolete":
   The JCenter Maven repository is no longer accepting submissions of Maven
   artifacts since 31st March 2021.  Ensure that the project is configured to
   search in repositories with the latest versions of its dependencies.

   https://developer.android.com/r/tools/jcenter-end-of-service

/Users/kirit.vaghela/react-native-ibeacon-simulator/android/src/main/java/com/ibeacon/simulator/BeaconBroadcast.java:101: Warning: Field requires API level 21 (current min is 18): android.bluetooth.le.AdvertiseSettings#ADVERTISE_MODE_LOW_LATENCY [InlinedApi]
            this.beaconTransmitter.setAdvertiseMode(AdvertiseSettings.ADVERTISE_MODE_LOW_LATENCY);
                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/kirit.vaghela/react-native-ibeacon-simulator/android/src/main/java/com/ibeacon/simulator/BeaconBroadcast.java:102: Warning: Field requires API level 21 (current min is 18): android.bluetooth.le.AdvertiseSettings#ADVERTISE_TX_POWER_HIGH [InlinedApi]
            this.beaconTransmitter.setAdvertiseTxPowerLevel(AdvertiseSettings.ADVERTISE_TX_POWER_HIGH);
                                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "InlinedApi":
   This check scans through all the Android API field references in the
   application and flags certain constants, such as static final integers and
   Strings, which were introduced in later versions. These will actually be
   copied into the class files rather than being referenced, which means that
   the value is available even when running on older devices. In some cases
   that's fine, and in other cases it can result in a runtime crash or
   incorrect behavior. It depends on the context, so consider the code
   carefully and decide whether it's safe and can be suppressed or whether the
   code needs to be guarded.

   If you really want to use this API and don't need to support older devices
   just set the minSdkVersion in your build.gradle or AndroidManifest.xml
   files.

   If your code is deliberately accessing newer APIs, and you have ensured
   (e.g. with conditional execution) that this code will only ever be called
   on a supported platform, then you can annotate your class or method with
   the @TargetApi annotation specifying the local minimum SDK to apply, such
   as @TargetApi(11), such that this check considers 11 rather than your
   manifest file's minimum SDK as the required API level.

/Users/kirit.vaghela/react-native-ibeacon-simulator/android/src/main/java/com/ibeacon/simulator/BeaconBroadcast.java:103: Error: Cast to AdvertiseCallback requires API level 21 (current min is 18) [NewApi]
            this.beaconTransmitter.startAdvertising(beacon, new AdvertiseCallback() {
                                                            ^
/Users/kirit.vaghela/react-native-ibeacon-simulator/android/src/main/java/com/ibeacon/simulator/BeaconBroadcast.java:103: Error: Class requires API level 21 (current min is 18): android.bluetooth.le.AdvertiseCallback [NewApi]
            this.beaconTransmitter.startAdvertising(beacon, new AdvertiseCallback() {
                                                                ~~~~~~~~~~~~~~~~~

   Explanation for issues of type "NewApi":
   This check scans through all the Android API calls in the application and
   warns about any calls that are not available on all versions targeted by
   this application (according to its minimum SDK attribute in the manifest).

   If you really want to use this API and don't need to support older devices
   just set the minSdkVersion in your build.gradle or AndroidManifest.xml
   files.

   If your code is deliberately accessing newer APIs, and you have ensured
   (e.g. with conditional execution) that this code will only ever be called
   on a supported platform, then you can annotate your class or method with
   the @TargetApi annotation specifying the local minimum SDK to apply, such
   as @TargetApi(11), such that this check considers 11 rather than your
   manifest file's minimum SDK as the required API level.

   If you are deliberately setting android: attributes in style definitions,
   make sure you place this in a values-vNN folder in order to avoid running
   into runtime conflicts on certain devices where manufacturers have added
   custom attributes whose ids conflict with the new ones on later platforms.

   Similarly, you can use tools:targetApi="11" in an XML file to indicate that
   the element will only be inflated in an adequate context.

/Users/kirit.vaghela/react-native-ibeacon-simulator/android/build.gradle:10: Warning: A newer version of com.android.tools.build:gradle than 8.1.1 is available: 8.3.1. (There is also a newer version of 8.1.ùë• available, if upgrading to 8.3.1 is difficult: 8.1.4) [AndroidGradlePluginVersion]
        classpath 'com.android.tools.build:gradle:8.1.1'
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "AndroidGradlePluginVersion":
   This detector looks for usage of the Android Gradle Plugin where the
   version you are using is not the current stable release. Using older
   versions is fine, and there are cases where you deliberately want to stick
   with an older version. However, you may simply not be aware that a more
   recent version is available, and that is what this lint check helps find.

/Users/kirit.vaghela/react-native-ibeacon-simulator/android/build.gradle:41: Warning: A newer version of org.altbeacon:android-beacon-library than 2.13.1 is available: 2.20.4 [GradleDependency]
    implementation 'org.altbeacon:android-beacon-library:2.13.1'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

/Users/kirit.vaghela/react-native-ibeacon-simulator/android/build.gradle:30: Error: Google Play requires that apps target API level 31 or higher.
 [ExpiredTargetSdkVersion]
        targetSdkVersion 28
        ~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "ExpiredTargetSdkVersion":
   As of the second half of 2018, Google Play requires that new apps and app
   updates target API level 26 or higher.

   Configuring your app to target a recent API level ensures that users
   benefit from significant security and performance improvements, while still
   allowing your app to run on older Android versions (down to the
   minSdkVersion).

   To update your targetSdkVersion, follow the steps from "Meeting Google Play
   requirements for target API level",
   https://developer.android.com/distribute/best-practices/develop/target-sdk.
   html

   https://support.google.com/googleplay/android-developer/answer/113469#targetsdk
   https://developer.android.com/distribute/best-practices/develop/target-sdk.html

3 errors, 6 warnings
