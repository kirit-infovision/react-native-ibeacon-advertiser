<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.1.1">

    <issue
        id="JcenterRepositoryObsolete"
        severity="Warning"
        message="JCenter Maven repository is no longer receiving updates: newer library versions may be available elsewhere"
        category="Correctness"
        priority="8"
        summary="JCenter Maven repository is read-only"
        explanation="The JCenter Maven repository is no longer accepting submissions of Maven artifacts since 31st March 2021.  Ensure that the project is configured to search in repositories with the latest versions of its dependencies."
        url="https://developer.android.com/r/tools/jcenter-end-of-service"
        urls="https://developer.android.com/r/tools/jcenter-end-of-service"
        errorLine1="        jcenter()"
        errorLine2="        ~~~~~~~~~">
        <location
            file="/Users/kirit.vaghela/react-native-ibeacon-simulator/android/build.gradle"
            line="7"
            column="9"/>
    </issue>

    <issue
        id="JcenterRepositoryObsolete"
        severity="Warning"
        message="JCenter Maven repository is no longer receiving updates: newer library versions may be available elsewhere"
        category="Correctness"
        priority="8"
        summary="JCenter Maven repository is read-only"
        explanation="The JCenter Maven repository is no longer accepting submissions of Maven artifacts since 31st March 2021.  Ensure that the project is configured to search in repositories with the latest versions of its dependencies."
        url="https://developer.android.com/r/tools/jcenter-end-of-service"
        urls="https://developer.android.com/r/tools/jcenter-end-of-service"
        errorLine1="    jcenter()"
        errorLine2="    ~~~~~~~~~">
        <location
            file="/Users/kirit.vaghela/react-native-ibeacon-simulator/android/build.gradle"
            line="18"
            column="5"/>
    </issue>

    <issue
        id="InlinedApi"
        severity="Warning"
        message="Field requires API level 21 (current min is 18): `android.bluetooth.le.AdvertiseSettings#ADVERTISE_MODE_LOW_LATENCY`"
        category="Correctness"
        priority="6"
        summary="Using inlined constants on older versions"
        explanation="This check scans through all the Android API field references in the application and flags certain constants, such as static final integers and Strings, which were introduced in later versions. These will actually be copied into the class files rather than being referenced, which means that the value is available even when running on older devices. In some cases that&apos;s fine, and in other cases it can result in a runtime crash or incorrect behavior. It depends on the context, so consider the code carefully and decide whether it&apos;s safe and can be suppressed or whether the code needs to be guarded.&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level."
        errorLine1="            this.beaconTransmitter.setAdvertiseMode(AdvertiseSettings.ADVERTISE_MODE_LOW_LATENCY);"
        errorLine2="                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/kirit.vaghela/react-native-ibeacon-simulator/android/src/main/java/com/ibeacon/simulator/BeaconBroadcast.java"
            line="101"
            column="53"/>
    </issue>

    <issue
        id="InlinedApi"
        severity="Warning"
        message="Field requires API level 21 (current min is 18): `android.bluetooth.le.AdvertiseSettings#ADVERTISE_TX_POWER_HIGH`"
        category="Correctness"
        priority="6"
        summary="Using inlined constants on older versions"
        explanation="This check scans through all the Android API field references in the application and flags certain constants, such as static final integers and Strings, which were introduced in later versions. These will actually be copied into the class files rather than being referenced, which means that the value is available even when running on older devices. In some cases that&apos;s fine, and in other cases it can result in a runtime crash or incorrect behavior. It depends on the context, so consider the code carefully and decide whether it&apos;s safe and can be suppressed or whether the code needs to be guarded.&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level."
        errorLine1="            this.beaconTransmitter.setAdvertiseTxPowerLevel(AdvertiseSettings.ADVERTISE_TX_POWER_HIGH);"
        errorLine2="                                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/kirit.vaghela/react-native-ibeacon-simulator/android/src/main/java/com/ibeacon/simulator/BeaconBroadcast.java"
            line="102"
            column="61"/>
    </issue>

    <issue
        id="NewApi"
        severity="Error"
        message="Cast to `AdvertiseCallback` requires API level 21 (current min is 18)"
        category="Correctness"
        priority="6"
        summary="Calling new methods on older versions"
        explanation="This check scans through all the Android API calls in the application and warns about any calls that are not available on **all** versions targeted by this application (according to its minimum SDK attribute in the manifest).&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;&#xA;If you are deliberately setting `android:` attributes in style definitions, make sure you place this in a `values-v`*NN* folder in order to avoid running into runtime conflicts on certain devices where manufacturers have added custom attributes whose ids conflict with the new ones on later platforms.&#xA;&#xA;Similarly, you can use tools:targetApi=&quot;11&quot; in an XML file to indicate that the element will only be inflated in an adequate context."
        errorLine1="            this.beaconTransmitter.startAdvertising(beacon, new AdvertiseCallback() {"
        errorLine2="                                                            ^">
        <location
            file="/Users/kirit.vaghela/react-native-ibeacon-simulator/android/src/main/java/com/ibeacon/simulator/BeaconBroadcast.java"
            line="103"
            column="61"/>
    </issue>

    <issue
        id="NewApi"
        severity="Error"
        message="Class requires API level 21 (current min is 18): `android.bluetooth.le.AdvertiseCallback`"
        category="Correctness"
        priority="6"
        summary="Calling new methods on older versions"
        explanation="This check scans through all the Android API calls in the application and warns about any calls that are not available on **all** versions targeted by this application (according to its minimum SDK attribute in the manifest).&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;&#xA;If you are deliberately setting `android:` attributes in style definitions, make sure you place this in a `values-v`*NN* folder in order to avoid running into runtime conflicts on certain devices where manufacturers have added custom attributes whose ids conflict with the new ones on later platforms.&#xA;&#xA;Similarly, you can use tools:targetApi=&quot;11&quot; in an XML file to indicate that the element will only be inflated in an adequate context."
        errorLine1="            this.beaconTransmitter.startAdvertising(beacon, new AdvertiseCallback() {"
        errorLine2="                                                                ~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/kirit.vaghela/react-native-ibeacon-simulator/android/src/main/java/com/ibeacon/simulator/BeaconBroadcast.java"
            line="103"
            column="65"/>
    </issue>

    <issue
        id="AndroidGradlePluginVersion"
        severity="Warning"
        message="A newer version of com.android.tools.build:gradle than 8.1.1 is available: 8.3.1. (There is also a newer version of 8.1.𝑥 available, if upgrading to 8.3.1 is difficult: 8.1.4)"
        category="Correctness"
        priority="4"
        summary="Obsolete Android Gradle Plugin Version"
        explanation="This detector looks for usage of the Android Gradle Plugin where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="        classpath &apos;com.android.tools.build:gradle:8.1.1&apos;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/kirit.vaghela/react-native-ibeacon-simulator/android/build.gradle"
            line="10"
            column="9"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of org.altbeacon:android-beacon-library than 2.13.1 is available: 2.20.4"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;org.altbeacon:android-beacon-library:2.13.1&apos;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/kirit.vaghela/react-native-ibeacon-simulator/android/build.gradle"
            line="41"
            column="20"/>
    </issue>

    <issue
        id="ExpiredTargetSdkVersion"
        severity="Fatal"
        message="Google Play requires that apps target API level 31 or higher.&#xA;"
        category="Compliance"
        priority="8"
        summary="TargetSdkVersion No Longer Supported"
        explanation="As of the second half of 2018, Google Play requires that new apps and app updates target API level 26 or higher.&#xA;&#xA;Configuring your app to target a recent API level ensures that users benefit from significant security and performance improvements, while still allowing your app to run on older Android versions (down to the `minSdkVersion`).&#xA;&#xA;To update your `targetSdkVersion`, follow the steps from &quot;Meeting Google Play requirements for target API level&quot;, https://developer.android.com/distribute/best-practices/develop/target-sdk.html"
        url="https://support.google.com/googleplay/android-developer/answer/113469#targetsdk"
        urls="https://support.google.com/googleplay/android-developer/answer/113469#targetsdk,https://developer.android.com/distribute/best-practices/develop/target-sdk.html"
        errorLine1="        targetSdkVersion 28"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/kirit.vaghela/react-native-ibeacon-simulator/android/build.gradle"
            line="30"
            column="9"/>
    </issue>

</issues>
